#!/usr/bin/env python

# Evaluate code on SeqIO record objects for each fasta record
# in the input stream.

# Example
# eval-fasta --fasta-file seqs.fasta --param 'len(r)' # print lengths of sequences.

import argparse
import re
from Bio import SeqIO

def parse_args():
    parser = argparse.ArgumentParser()

    parser.add_argument('-f', '--fasta-file', default='/dev/stdin')
    parser.add_argument('-p', '--proc', type=str)
    parser.add_argument('-s', '--skip-fail', default=False, action='store_true', help='Skip sequence if theres an exception')

    return parser.parse_args()


def main():

    args = parse_args()

    with open(args.fasta_file) as handle:
        records = SeqIO.parse(handle, 'fasta')

        for n, r in enumerate(records):
            try:
                print(eval(args.proc))
            except Exception as e:
                if args.skip_fail:
                    continue
                else:
                    raise e


if __name__ == '__main__':
    main()
